from sage.all import log, sqrt, exp, cos, numerical_integral, RealField

RR = RealField(100)

# Logarithmic Integral Approximation
def log_integral(x):
    val, _ = numerical_integral(lambda t: 1 / log(t), 2, x)
    return RR(val)

# Angular Kernel V6.5 with Coherence Damping
def K_squared(x, gamma_values, T=80):
    log_x = log(x)
    K_x = sum(
        exp(-gamma**2 / T**2) * cos(gamma * log_x) * cos(gamma * log(x / 2))
        for gamma in gamma_values
    )
    return K_x**2

# Version 6.5 Error Bound
def E_6_5(x, K2):
    return (1.7 * sqrt(x * log(x)) * K2).n()

# Smooth Proven Envelope Bound
def B_smooth(x):
    return (21.08 * sqrt(x) * log(x)**0.2).n()

# Fiori Bound (2023)
def fiori_bound(x):
    return (9.2211 * x * sqrt(log(x)) * exp(-0.8476 * sqrt(log(x)))).n()

# BÃ¼the Bound (2022)
def buthe_bound(x):
    return ((90 + 6040 / (x + 8)) * sqrt(x) / log(x) * exp(-0.95 * sqrt(log(x)))).n()

# Known Ï€(x) values (from OEIS A006880)
pi_values = {
    10**4: 1229,
    10**5: 9592,
    10**6: 78498,
    10**7: 664579,
    10**8: 5761455,
    10**9: 50847534,
    10**10: 455052511,
    10**11: 4118054813,
    10**12: 37607912018,
    10**13: 346065536839,
    10**14: 3204941750802,
    10**15: 29844570422669,
    10**16: 279238341033925,
    10**17: 2623557157654233,
    10**18: 24739954287740860,
    10**19: 234057667276344607,
    10**20: 2220819602560918840,
    10**21: 21127269486018731928,
    10**22: 201467286689315906290,
    10**23: 1925320391606803968923,
    10**24: 18435599767349200867866
}

# First 200 Riemann zeros (truncated for display)
gamma_values = [14.134725142, 21.022039639, 25.010857580, 30.424876126, 32.935061588, 37.586178159, 40.918719012, 43.327073281, 48.005150881, 49.773832478, 52.970321478, 56.446247697, 59.347044003, 60.831778525, 65.112544048, 67.079810529, 69.546401711, 72.067157674, 75.704690699, 77.144840069, 79.337375020, 82.910380854, 84.735492981, 87.425274613, 88.809111208, 92.491899271, 94.651344041, 95.870634228, 98.831194218, 101.317851006, 103.725538040, 105.446623052, 107.168611184, 111.029535543, 111.874659177, 114.320220915, 116.226680321, 118.790782866, 121.370125002, 122.946829294, 124.256818554, 127.516683880, 129.578704200, 131.087688531, 133.497737203, 134.756509753, 138.116042055, 139.736208952, 141.123707404, 143.111845808, 146.000982487, 147.422765343, 150.053520421, 150.925257612, 153.024693811, 156.112909294, 157.597591818, 158.849988171, 161.188964138, 163.030709687, 165.537069188, 167.184439978, 169.094515416, 169.911976479, 173.411536520, 174.754191523, 176.441434298, 178.377407776, 179.916484020, 182.207078484, 184.874467848, 185.598783678, 187.228922584, 189.416158656, 192.026656361, 193.079726604, 195.265396680, 196.876481841, 198.015309676, 201.264751944, 202.493594514, 204.189671803, 205.394697202, 207.906258888, 209.576509717, 211.690862595, 213.347919360, 214.547044783, 216.169538508, 219.067596349, 220.714918839, 221.430705555, 224.007000255, 224.983324670, 227.421444280, 229.337413306, 231.250188700, 231.987235253, 233.693404179, 236.524229666, 237.769820481, 239.555477573, 241.049157796, 242.823271934, 244.070898497, 247.136990075, 248.101990060, 249.573689645, 251.014947795, 253.069986748, 255.306256455, 256.380713694, 258.610439492, 259.874406990, 260.805084505, 263.573893905, 265.557851839, 266.614973782, 267.921915083, 269.970449024, 271.494055642, 273.459609188, 275.587492649, 276.452049503, 278.250743530, 279.229250928, 282.465114765, 283.211185733, 284.835963981, 286.667445363, 287.911920501, 289.579854929, 291.846291329, 293.558434139, 294.965369619, 295.573254879, 297.979277062, 299.840326054, 301.649325462, 302.696749590, 304.864371341, 305.728912602, 307.219496128, 310.109463147, 311.165141530, 312.427801181, 313.985285731, 315.475616089, 317.734805942, 318.853104256, 321.160134309, 322.144558672, 323.466969558, 324.862866052, 327.443901262, 329.033071680, 329.953239728, 331.474467583, 333.645378525, 334.211354833, 336.841850428, 338.339992851, 339.858216725, 341.042261111, 342.054877510, 344.661702940, 346.347870566, 347.272677584, 349.316260871, 350.408419349, 351.878649025, 353.488900489, 356.017574977, 357.151302252, 357.952685102, 359.743754953, 361.289361696, 363.331330579, 364.736024114, 366.212710288, 367.993575482, 368.968438096, 370.050919212, 373.061928372, 373.864873911, 375.825912767, 376.324092231, 378.436680250, 379.872975347, 381.484468617, 383.443529450, 384.956116815, 385.861300846, 387.222890222, 388.846128354, 391.456083564, 392.245083340, 393.427743844, 395.582870011, 396.381854223, 397.918736210, 399.985119876, 401.839228601, 402.861917764, 404.236441800, 405.134387460, 407.581460387, 408.947245502, 410.513869193, 411.972267804, 413.262736070, 415.018809755, 415.455214996, 418.387705790, 419.861364818, 420.643827625, 422.076710059, 423.716579627, 425.069882494, 427.208825084, 428.127914077, 430.328745431, 431.301306931, 432.138641735, 433.889218481, 436.161006433, 437.581698168, 438.621738656, 439.918442214, 441.683199201, 442.904546303, 444.319336278, 446.860622696, 447.441704194, 449.148545685, 450.126945780, 451.403308445, 453.986737807, 454.974683769, 456.328426689, 457.903893064, 459.513415281, 460.087944422, 462.065367275, 464.057286911, 465.671539211, 466.570286931, 467.439046210, 469.536004559, 470.773655478, 472.799174662, 473.835232345, 475.600339369, 476.769015237, 478.075263767, 478.942181535, 481.830339376, 482.834782791, 483.851427212, 485.539148129, 486.528718262, 488.380567090, 489.661761578, 491.398821594, 493.314441582, 493.957997805, 495.358828822, 496.429696216, 498.580782430, 500.309084942, 501.604446965, 502.276270327, 504.499773313, 505.415231742, 506.464152710, 508.800700336, 510.264227944, 511.562289700, 512.623144531, 513.668985555, 515.435057167, 517.589668572, 518.234223148, 520.106310412, 521.525193449, 522.456696178, 523.960530892, 525.077385687, 527.903641601, 528.406213852, 529.806226319, 530.866917884, 532.688183028, 533.779630754, 535.664314076, 537.069759083, 538.428526176, 540.213166376, 540.631390247, 541.847437121, 544.323890101, 545.636833249, 547.010912058, 547.931613364, 549.497567563, 550.970010039, 552.049572201, 553.764972119, 555.792020562, 556.899476407, 557.564659172, 559.316237029, 560.240807497, 562.559207616, 564.160879111, 564.506055938, 566.698787683, 567.731757901, 568.923955180, 570.051114782, 572.419984132, 573.614610527, 575.093886014, 575.807247141, 577.039003472]

# Evaluation and Output Table
x_values = sorted(pi_values.keys())
results = []

print(f"{'x':>10} | {'Actual Err':>11} | {'K(x)^2':>9} | {'E6.5':>9} | {'âœ“':^3} | "
      f"{'B_smooth':>9} | {'âœ“':^3} | {'Fiori':>9} | {'âœ“':^3} | {'BÃ¼the':>9} | {'âœ“':^3}")
print("-" * 110)

for x in x_values:
    pi_x = pi_values[x]
    li_x = log_integral(x)
    actual_err = abs(pi_x - li_x)

    K2 = K_squared(x, gamma_values).n()
    E = E_6_5(x, K2)
    B = B_smooth(x)
    F = fiori_bound(x)
    Bu = buthe_bound(x)

    e_valid = E >= actual_err
    b_valid = B >= actual_err
    f_valid = F >= actual_err
    bu_valid = Bu >= actual_err

    x_label = f"10^{int(log(x)/log(10))}"

    print(f"{x_label:>10} | {actual_err:.2f} | {K2:.2f} | {E:.2f} | {'âœ“' if e_valid else 'âœ—'} | "
          f"{B:.2f} | {'âœ“' if b_valid else 'âœ—'} | {F:.2f} | {'âœ“' if f_valid else 'âœ—'} | "
          f"{Bu:.2f} | {'âœ“' if bu_valid else 'âœ—'}")

# Ratio Comparison Table
print(f"\nðŸ“Š Comparison Table (x â‰¥ 10^18):")
print(f"{'x':>10} | {'B_smooth/Err':>14} | {'Fiori/Err':>12} | {'BÃ¼the/Err':>12} | "
      f"{'Fiori/B_smooth':>15} | {'BÃ¼the/B_smooth':>16}")
print("-" * 95)

for x in x_values:
    pi_x = pi_values[x]
    li_x = log_integral(x)
    actual_err = abs(pi_x - li_x)

    B = B_smooth(x)
    F = fiori_bound(x)
    Bu = buthe_bound(x)

    if x >= 10**18:
        print(f"{f'10^{int(log(x)/log(10))}':>10} | "
              f"{(B / actual_err):>14.2f} | {(F / actual_err):>12.2f} | {(Bu / actual_err):>12.2f} | "
              f"{(F / B):>15.2f} | {(Bu / B):>16.2f}")